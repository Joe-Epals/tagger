<%= render :partial => 'navbar' %>

	<div class="row">

		<!--- TOP LEFT CONTENT WELL -->
		<table>
			<tr>
				<td style="padding-left:15px;">
				<div id="mainContentTopLeft" class="span4" style="padding-right:10px;border-right-style:solid;border-right-width:thin;border-right-color:#fbd385">
					<%= render :partial => 'topleft' %>
				</div>	
				</td><td>
				<div id="mainContentTopRight"  class="span4" style="padding-left:15px;padding-right:10px;width:305px;border-right-style:solid;border-right-width:thin;border-right-color:#fbd385">
						<%= render :partial => 'topright' %>
				</div>		
				</td><td style="width:100%;vertical-align:top;padding-left:15px;">
				<div id="mainContentBottom"  style="width:100%;" >
					
					<img src="/assets/LRMI.png" align="right" style="margin-top:10px;">
				</div>	
				</td>
			</tr>
		</table>
	</div>

<script type="text/javascript" src="oauth/oauth.js"></script>	
<script type="text/javascript" src="oauth/sha1.js"></script>	
<script type="text/javascript">
// Update Javascript Struct with Text Field Data and Output to TextArea

$(document).ready(function(){

	window.itemCounter = 0;
	window.boxes = 0;
	window.currentAlignmentCounter = 0;
	window.currentAlignmentItem = 0;
	window.firtname = '';
	window.lastname = '';
	window.activeTab = null;
	window.previousDotValue = '';
	
	window.items = new Array();
	window.alignmentArray = new Array();
	window.dotNotationDisplayArray = new Array();
	window.currentAlignmentArray = new Array();
	
	readAlignmentDataFromFiles();

	$("#amountyears").val('0');
	$("#amountmonths").val('0');
	$("#amountweeks").val('0');
	$("#amountdays").val('0');
	$("#amounthours").val('0');
	$("#amountminutes").val('0');
	$("#amountseconds").val('0');
	$( "#mainContentTopLeft" ).resizable();
	$( "#mainContentTopRight" ).resizable();
	$( "#mainContentBottom" ).resizable();	
	
	jQuery("#mainContentTopRight").hide();
	jQuery("#mainContentBottom").show();
	
	$.ajaxSetup({ cache: false });

	var $window = $( window );
	var $mainContentTopLeft = $( '#mainContentTopLeft' );
	var $mainContentTopRight = $( '#mainContentTopRight' );
	var $mainContentBottom = $ ( '#mainContentBottom' );
	var $textarea = $( '#textarea' );
	var $endUser = $( '#endUser');
	var $ageRange = $( '#ageRange');
	var $educationalUse = $( '#educationalUse');
	var $interactivityType = $( '#interactivityType');
	var $learningResourceType = $( '#learningResourceType');
	var $mediaType = $( '#mediaType');
	var $groupType = $( '#groupType');
	var $timeRequired = $( '#timeRequired');
	var $dotNotation = $( '#dotNotation');
	var $createdOn = $( '#createdOn');						
		
	$mainContentTopLeft.height( $window.height()  );
	$mainContentTopRight.height( $window.height() );
	$mainContentBottom.height( $window.height() );
	
	$textarea.height( $window.height()  - 200 );

    $("#endUser").css("height", parseInt($("#endUser option").length) * 17.5);
    $("#ageRange").css("height", parseInt($("#ageRange option").length) * 17);
    $("#educationalUse").css("height", parseInt($("#educationalUse option").length) * 16.5);
    $("#interactivityType").css("height", parseInt($("#interactivityType option").length) * 19);
    $("#learningResourceType").css("height", parseInt($("#learningResourceType option").length) * 17);
    $("#mediaType").css("height", parseInt($("#mediaType option").length) * 16.5);
    $("#groupType").css("height", parseInt($("#groupType option").length) * 16.5);
	
    $dotNotation.typeahead({source: dotNotationDisplayArray, items:8});
	
	$createdOn.val('');

	$window.resize(function() {
		$mainContentTopLeft.height( $window.height()  );
		$mainContentTopRight.height( $window.height() );	
		$mainContentBottom.height( $window.height() );
		
		$textarea.height( $window.height() - 200 );

		});

	checkCookie();	
});

// Reads the ccss2asn-ela.csv and ccss2asn-math.csv from local server to populate Alignment Array


function readAlignmentDataFromFiles() {
 $.ajax({
        type: "GET",
        url: "ccss2asn-math.csv",
        dataType: "text",
        success: function(data) {processDataForAlignmentArray(data);}
     });
 $.ajax({
        type: "GET",
        url: "ccss2asn-ela.csv",
        dataType: "text",
        success: function(data) {processDataForAlignmentArray(data);}
     });	 
}
	 
function processDataForAlignmentArray(allText)	{
  var reader = new FileReader();
  reader.readAsText(allText);
  var output = $.csv2Array(allText);
  			for (var i = 1; i < output.length-1; i++)
			{
				alignmentArray.push({'title':output[i][2],'url':output[i][3],'description':output[i][0],'guid':output[i][4]});
				dotNotationDisplayArray.push(output[i][2]);
			}
}


	

//Update Main Content Bottom with URL iFrame
function updateMainContentBottom(metaSourceValue){
			jQuery("#mainContentBottom").show();
			jQuery("#mainContentBottom").html("<iframe scrolling=\"auto\" frameborder=0 id=\"iframe\" width=\"100%\" src=\""+ metaSourceValue +"\"></iframe>");
			var $window = $( window );
			var $iframe = $( '#iframe' );
			$iframe.height( $window.height() - 100 );

}		

function updateTextArea(){
	if (String(activeTab).substr(-1)  == "t") {
		$("#textarea").empty();
		boxes = document.checkBoxForm.tagItem.length;
	
		for (i = 0; i < boxes; i++) {
			if (document.checkBoxForm.tagItem[i].checked) {
			
				if (items[i].title != "") $("#textarea").append("Title:\n<br/>", items[i].title,"\n<br/>");
				if (items[i].url != "") $("#textarea").append("URL:\n<br/>", items[i].url,"\n<br/>");
				if (items[i].language != "") $("#textarea").append("Language:\n<br/>", items[i].language,"\n<br/>");
				if (items[i].createdOn != "") $("#textarea").append("Created On:\n<br/>", items[i].createdOn,"\n<br/>");
				if (items[i].topic != "") $("#textarea").append("Topic/Subject:\n<br/>", items[i].topic,"\n<br/>");
				if (items[i].createdBy != "") $("#textarea").append("Created By:\n<br/>", items[i].createdBy,"\n<br/>");
				if (items[i].usageRightsURL != "") $("#textarea").append("Usage Rights URL:\n<br/>", items[i].usageRightsURL,"\n<br/>");
				if (items[i].publisher != "") $("#textarea").append("Publisher:\n<br/>", items[i].publisher,"\n<br/>");
				if (items[i].isBasedOnURL != "") $("#textarea").append("Is Based On URL:\n<br/>", items[i].isBasedOnURL,"\n<br/>");
				if (items[i].endUser != "") $("#textarea").append("End User:\n<br/>", items[i].endUser,"\n<br/>");
				if (items[i].ageRange != "") $("#textarea").append("Age Range:\n<br/>", items[i].ageRange,"\n<br/>");
				if (items[i].educationalUse != "") $("#textarea").append("Educational Use:\n<br/>", items[i].educationalUse,"\n<br/>");
				if (items[i].interactivityType != "") $("#textarea").append("Interactivity Type:\n<br/>", items[i].interactivityType,"\n<br/>");
				if (items[i].learningResourceType != "") $("#textarea").append("Learning Res Type:\n<br/>", items[i].learningResourceType,"\n<br/>");
				if (items[i].mediaType != "") $("#textarea").append("Media Type:\n<br/>", items[i].mediaType,"\n<br/>");
				if (items[i].groupType != "") $("#textarea").append("Group Type:\n<br/>", items[i].groupType,"\n<br/>");
				if (items[i].timeRequired != "P0Y0M0W0DT0H0M0S") $("#textarea").append("Time Required:\n<br/>", items[i].timeRequired,"\n<br/>\n<br/>");	
	
				for (j = 0; j < items[i].educationAlignmentArray.length; j++){
						if (items[i].educationAlignmentArray[j].educationalAlignment != "") $("#textarea").append("Educational Alignment:\n<br/>",  items[i].educationAlignmentArray[j].educationalAlignment,"\n<br/>");
						if (items[i].educationAlignmentArray[j].alignmentType != "") $("#textarea").append("Alignment Type:\n<br/>",  items[i].educationAlignmentArray[j].alignmentType,"\n<br/>");
						if (items[i].educationAlignmentArray[j].dotNotation != "") $("#textarea").append("Dot Notation:\n<br/>",  items[i].educationAlignmentArray[j].dotNotation,"\n<br/>");
						if (items[i].educationAlignmentArray[j].itemURL != "") $("#textarea").append("Item URL:\n<br/>",  items[i].educationAlignmentArray[j].itemURL,"\n<br/>");
						if (items[i].educationAlignmentArray[j].description != "") $("#textarea").append("Description:\n<br/>",  items[i].educationAlignmentArray[j].description,"\n<br/>");
					//	if (items[i].educationAlignmentArray[j].guid != "") $("#textarea").append("Item GUID:\n<br/>",  items[i].educationAlignmentArray[j].guid,"\n<br/>\n<br/>");
				}				
				$("#textarea").append("\n<br/>-----------------------\n\n<br/><br/>");
			}
		}
	}
}

function updateInputFields(){
		
		// Check to see if no tags are checked.  If none are checked, blank out all fields.
		
		var LRMIForm = document.forms.LRMIData.elements;
		var myform = document.checkBoxForm;
		var TempObject;
		var checkedArray = new Array();
		boxes = 0;
		for (var i=0; i<document.checkBoxForm.tagItem.length; i++) {
			 if (myform.elements['tagItem'][i].checked) {
				 boxes++;
				 TempObject = items[i];
				 checkedArray.push(items[i]);
			 }
		}
		
		// If no tags, or 1 tag are checked we want to clear out the fields of current data.
		if (boxes == 0 || boxes == 1){ for (var i in LRMIForm){ LRMIForm[i].value = ''; } }
		
		// If only one tag is checked, set field values to the values of the single tag checked.
		if (boxes == 1){ setupDisplayFieldsForCurrentTagSelection(TempObject); }
		
		
		// If tags are checked, compare their values to see if they are the same.
		// If they are the same, set the field to the value. Otherwise, blank out the field.
		// TODO: Finish multiple selection
		else {	
					// for (var i in LRMIForm){	
						// if(LRMIForm[i].type == 'text'){
							// var LRMIid = LRMIForm[i].id;
							// var undef = false;  //TODO
							// for (var j in checkedArray){
								// if(typeof checkedArray[j][LRMIid] == 'undefined'){
									// LRMIForm[i].value = '';	
									// undef = true; 
								// }
								// else {
								// console.log(checkedArray[j][LRMIid]);
								// }
							// }
							// count(array_keys(items[j], 'yes')) == count(items[j]);//console.log(LRMIid);
							// console.log(items[j].LRMIid);
							// || LRMIForm[i].type == 'select-one' || LRMIForm[i].type == 'select-multiple'
						// }
					// }
					for (var i in LRMIForm){ LRMIForm[i].value = ''; } 
				}
		// boxes = document.checkBoxForm.tagItem.length;
	
		// for (i = 0; i < boxes; i++) {
			// if (document.checkBoxForm.tagItem[i].checked) {

				

				// for (j = 0; j < items[i].educationAlignmentArray.length; j++){
						// if (items[i].educationAlignmentArray[j].educationalAlignment != "") $("#textarea").append("Educational Alignment:\n",  items[i].educationAlignmentArray[j].educationalAlignment,"\n");
						// if (items[i].educationAlignmentArray[j].alignmentType != "") $("#textarea").append("Alignment Type:\n",  items[i].educationAlignmentArray[j].alignmentType,"\n");
						// if (items[i].educationAlignmentArray[j].dotNotation != "") $("#textarea").append("Dot Notation:\n",  items[i].educationAlignmentArray[j].dotNotation,"\n");
						// if (items[i].educationAlignmentArray[j].itemURL != "") $("#textarea").append("Item URL:\n",  items[i].educationAlignmentArray[j].itemURL,"\n");
						// if (items[i].educationAlignmentArray[j].description != "") $("#textarea").append("Description:\n",  items[i].educationAlignmentArray[j].description,"\n\n");
						// }				
				// $("#textarea").append("\n-----------------------\n\n");
}
	

function setupDisplayFieldsForCurrentTagSelection(TempObject){

	//Setup General Tab for Single Selection
	if (TempObject.title != "") 						$("#title").attr("value", TempObject.title);
	if (TempObject.url != "")							$("#url").attr("value",TempObject.url);
	if (TempObject.language == "en-US") 						$("#language").attr("value","English");
	if (TempObject.language == "es") 						$("#language").attr("value","Spanish");
	if (TempObject.language == "") 						$("#language").attr("value","");
	if (TempObject.createdOn != "") 					$("#createdOn").attr("value",TempObject.createdOn);
	if (TempObject.topic != "") 						$("#topic").attr("value",TempObject.topic);
	if (TempObject.createdBy != "") 					$("#createdBy").attr("value",TempObject.createdBy);
	if (TempObject.usageRightsURL != "") 				$("#usageRightsURL").attr("value",TempObject.usageRightsURL);
	if (TempObject.publisher != "") 					$("#publisher").attr("value",TempObject.publisher);
	if (TempObject.isBasedOnURL != "") 					$("#isBasedOnURL").attr("value",TempObject.isBasedOnURL);
	if (TempObject.timeRequired != "P0Y0M0W0DT0H0M0S") 	$("#timeRequired").attr("value",TempObject.timeRequired);	
	
	
	//Setup Education Tab for Single Selection
	setupDisplayFieldsEducationTab(TempObject, 'endUser');
	setupDisplayFieldsEducationTab(TempObject, 'ageRange');
	setupDisplayFieldsEducationTab(TempObject, 'educationalUse');
	setupDisplayFieldsEducationTab(TempObject, 'interactivityType');
	setupDisplayFieldsEducationTab(TempObject, 'learningResourceType');				
	setupDisplayFieldsEducationTab(TempObject, 'mediaType');
	setupDisplayFieldsEducationTab(TempObject, 'groupType');	
	
	//Setup Alignment Tab for Single Selection - Defaults to Last Added Educational Alignment
	if (typeof TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1] != 'undefined') {
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].educationalAlignment != "") 	$("#educationalAlignment").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].educationalAlignment);
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].alignmentType != "") 		$("#alignmentType").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].alignmentType);
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].dotNotation != "") 			$("#dotNotation").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].dotNotation);
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].itemURL != "") 				$("#itemURL").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].itemURL);
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].description != "") 			$("#description").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].description);
		if (TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].guid != "") 				$("#itemGUID").attr("value",TempObject.educationAlignmentArray[TempObject.educationAlignmentArray.length-1].guid);
	}	
}

function setupDisplayFieldsEducationTab(TempObject, selectBox){
	// This code is needed to merge the multiselect field and the "other" input field per 
	if (typeof TempObject[selectBox] != 'undefined') {
		if (TempObject[selectBox] != "") {	
			var optionsToSelect = TempObject[selectBox];
			var select = document.getElementById( [selectBox] );				
			for ( var i = 0, l = select.options.length, o; i < l; i++ ){
			  o = select.options[i];
			  var tempO = o;
			  if ( optionsToSelect.toLowerCase().indexOf( tempO.text.toLowerCase() ) != -1 ) {
				o.selected = true;
				optionsToSelect = optionsToSelect.replace(o.text,"");
				optionsToSelect = optionsToSelect.replace(/,,/g,",");
				optionsToSelect = optionsToSelect.replace(/^,/g,"");
			  }
			  else document.getElementById( [selectBox]+'Other' ).value = optionsToSelect;
			}	
		}
	}		
}

$('a[data-toggle="tab"]').on('shown', function (e) {
	activeTab = e.target;
	if (String(activeTab).substr(-2)  == "ut") {
		updateTextArea();
	}
})
	
$("#multiItemSelector").change(function(){
	blankCurrentAlignment();
	updateInputFields();
	updateTextArea();
});

// General Tab Input Fields

$("#title").change(function(){
	var metaSourceValue = $('#title').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].title = metaSourceValue; 
		document.getElementById('tagLabel' + i).innerHTML = "<input type='checkbox' checked='yes' id='tagItem' name='tagItem'>" + $('#title').val();
		}
	}
	updateTextArea();
});

$("#language").change(function(){
	var metaSourceValue = $('#language').val();
	if (metaSourceValue == "English") metaSourceValue = "en-US";
	if (metaSourceValue == "Spanish") metaSourceValue = "es";
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].language = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#url").change(function(){
	var metaSourceValue = $('#url').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].url = metaSourceValue; 
		var taggedURL = $('#url').val();
		document.getElementById('tagURL' + i).onclick = function(){updateMainContentBottom(String(taggedURL));};
		document.getElementById('tagURL' + i).style.display = "block";		
		}
	}
	updateTextArea();
	updateMainContentBottom(metaSourceValue);
});

$("#createdOn").datepicker({
				format: 'yyyy-mm-dd'
			})
.on('changeDate', function(){
	var metaSourceValue = $('#createdOn').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].createdOn = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#topic").change(function(){
	var metaSourceValue = $('#topic').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].topic = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#createdBy").change(function(){
	var metaSourceValue = $('#createdBy').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].createdBy = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#usageRightsURL").change(function(){
	var metaSourceValue = $('#usageRightsURL').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].usageRightsURL = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#publisher").change(function(){
	var metaSourceValue = $('#publisher').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].publisher = metaSourceValue; 
		}
	}
	updateTextArea();
});

$("#isBasedOnURL").change(function(){
	var metaSourceValue = $('#isBasedOnURL').val();
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
		items[i].isBasedOnURL = metaSourceValue; 
		}
	}
	updateTextArea();
});

// Education Tab Input Fields

$("#endUser").change(function(){
educationalTabUpdateDataModel('endUser','endUserOther');
});

$("#endUserOther").change(function(){
educationalTabUpdateDataModel('endUser','endUserOther');
});


$("#ageRange").change(function(){
educationalTabUpdateDataModel('ageRange','ageRangeOther');
});

$("#ageRangeOther").change(function(){
educationalTabUpdateDataModel('ageRange','ageRangeOther');
});


$("#educationalUse").change(function(){
educationalTabUpdateDataModel('educationalUse','educationalUseOther');
});

$("#educationalUseOther").change(function(){
educationalTabUpdateDataModel('educationalUse','educationalUseOther');
});

$("#interactivityType").change(function(){
educationalTabUpdateDataModel('interactivityType','interactivityTypeOther');
});

$("#interactivityTypeOther").change(function(){
educationalTabUpdateDataModel('interactivityType','interactivityTypeOther');
});

$("#learningResourceType").change(function(){
educationalTabUpdateDataModel('learningResourceType','learningResourceTypeOther');
});

$("#learningResourceTypeOther").change(function(){
educationalTabUpdateDataModel('learningResourceType','learningResourceTypeOther');
});

$("#mediaType").change(function(){
educationalTabUpdateDataModel('mediaType','mediaTypeOther');
});

$("#mediaTypeOther").change(function(){
educationalTabUpdateDataModel('mediaType','mediaTypeOther');
});

$("#groupType").change(function(){
educationalTabUpdateDataModel('groupType','groupTypeOther');
});

$("#groupTypeOther").change(function(){
educationalTabUpdateDataModel('groupType','groupTypeOther');
});

function educationalTabUpdateDataModel(nameBox, nameInput){
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {
				var found = false;
				var LRMIForm = document.forms.LRMIData;
				var metaSourceValue = "";
				var x = 0;
				 for (x=0;x<LRMIForm[nameBox].length;x++)
				 {
					if (LRMIForm[nameBox][x].selected){
						if (found) {
							metaSourceValue = metaSourceValue + "," + LRMIForm[nameBox][x].value;
						}
						else {
							metaSourceValue = LRMIForm[nameBox][x].value;
							found = true;
						}
					}
				 }
				if (LRMIForm[nameInput].value != ''){
					metaSourceValue = metaSourceValue + "," + LRMIForm[nameInput].value;
				}
				items[i][nameBox] = metaSourceValue;
		}
	}
	updateTextArea();
}


// Alignment Tab Input Field Updates

$("#dotNotation").change(function(e){
	if (e.target.value == previousDotValue) {}
	else {	
		blankCurrentAlignment();
		previousDotValue = $('#dotNotation').val();
		document.getElementById('itemURL').value = '';
		document.getElementById('description').value = '';
		document.getElementById('description').value = 'Loading (please wait)....';
		document.getElementById('addButton').setAttribute("class","btn btn-success disabled");
		document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
		for (i = 0; i < alignmentArray.length; i++) {
			if ($('#dotNotation').val() ==  alignmentArray[i].title) {
				document.getElementById('itemURL').value = alignmentArray[i].url;	
				document.getElementById('itemGUID').value = alignmentArray[i].guid;
				$.ajax({
					 async: false,
					 url: 'http://anyorigin.com/get?url='+alignmentArray[i].description+'&callback=?',
					 dataType: "json",
					 success: function(data){
						var newTitle = $(data.contents).filter('title').text();
						if (newTitle != ''){
						var tempDivLength = newTitle.length;
							document.getElementById('description').value = newTitle;
							document.getElementById('addButton').setAttribute("class","btn btn-success");	
							document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
						}
						if (newTitle == ''){
							document.getElementById('description').value = 'No Description Available';
							document.getElementById('addButton').setAttribute("class","btn btn-success");
							document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");	
						}
						
					}
				});
			}	
		}
	}
});


$("#educationalAlignment").change(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#alignmentType").change(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#itemURL").change(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#itemURL").keypress(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#description").change(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#description").keypress(function(e){	
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

$("#dotNotation").keypress(function(e){
	blankCurrentAlignment();
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
	document.getElementById('addButton').setAttribute("class","btn btn-success");
});

jQuery(function($){
    $("#addButton").click(function() {	
	var metaSourceValue1 = $('#educationalAlignment').val();
	var metaSourceValue2 = $('#alignmentType').val();
	var metaSourceValue3 = $('#dotNotation').val();
	var metaSourceValue4 = $('#itemURL').val();
	var metaSourceValue5 = $('#description').val();
	var metaSourceValue6 = $('#itemGUID').val();

	//Updates the Educational Alignment Array of the Tagged Items
	boxes = document.checkBoxForm.tagItem.length;
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {	
		
		//Check to see if the EducationalArray already contains this Alignment
			var inEducationalAlignmentTaggedItems = false;
			if (typeof items[i].educationAlignmentArray[0] !== 'undefined' && items[i].educationAlignmentArray[0] !== null){
				for (var j = 0; j < items[i].educationAlignmentArray.length; j++) {
					if(	(items[i].educationAlignmentArray[j].educationalAlignment == $('#educationalAlignment').val()) &&
						(items[i].educationAlignmentArray[j].alignmentType == $('#alignmentType').val()) &&
						(items[i].educationAlignmentArray[j].dotNotation == $('#dotNotation').val()) &&
						(items[i].educationAlignmentArray[j].itemURL == $('#itemURL').val()) &&
						(items[i].educationAlignmentArray[j].description == $('#description').val() ) &&
						(items[i].educationAlignmentArray[j].guid == $('#itemGUID').val() )  ){
								inEducationalAlignmentTaggedItems = true;
								if (items[i].title == '') alert("This alignment has already been added to the Tagged Item: " + items[i].id );
								if (items[i].title != '') alert("This alignment has already been added to the Tagged Item: " + items[i].title );
					}
				}
				if (!inEducationalAlignmentTaggedItems) {
					setTimeout(items[i].educationAlignmentArray.push({'educationalAlignment':metaSourceValue1,'alignmentType':metaSourceValue2,'dotNotation':metaSourceValue3,'itemURL':metaSourceValue4,'description':metaSourceValue5,'guid':metaSourceValue6}),3000);
					document.getElementById('deleteButton').setAttribute("class","btn btn-warning");
					
				} 
			}
			else setTimeout(items[i].educationAlignmentArray.push({'educationalAlignment':metaSourceValue1,'alignmentType':metaSourceValue2,'dotNotation':metaSourceValue3,'itemURL':metaSourceValue4,'description':metaSourceValue5,'guid':metaSourceValue6}),3000);
			document.getElementById('deleteButton').setAttribute("class","btn btn-warning");
		}
	}
	

	//Check to see if the current Alignment is already Added to the currentAlignmentArray
	var alreadyExists = false;
	for (i = 0; i < currentAlignmentArray.length; i++) {
		if(	(currentAlignmentArray[i].educationalAlignment == $('#educationalAlignment').val()) &&
			(currentAlignmentArray[i].alignmentType == $('#alignmentType').val()) &&
			(currentAlignmentArray[i].dotNotation == $('#dotNotation').val()) &&
			(currentAlignmentArray[i].itemURL == $('#itemURL').val()) &&
			(currentAlignmentArray[i].description == $('#description').val() ) &&
			(currentAlignmentArray[i].guid == $('#itemGUID').val()  )){
					alreadyExists = true;
		}
	}
	
	if (!alreadyExists) {
		
		blankCurrentAlignment();
		
		// Add to the currentAlignmentArray
		currentAlignmentArray.push({'educationalAlignment':metaSourceValue1,'alignmentType':metaSourceValue2,'dotNotation':metaSourceValue3,'itemURL':metaSourceValue4,'description':metaSourceValue5,'guid':metaSourceValue6});
		
		//Updates the Alignment Table on the Alignment Tab
		if (metaSourceValue3 == '') metaSourceValue3 = 'N/A';
		$('#currentAlignmentTable > tbody:last').append('<tr style="background-color:#F8B93B;color:#ffffff;" id="currentAlignmentRow' + currentAlignmentCounter + '" onclick="updateAlignmentFields(' + currentAlignmentCounter + ');" onMouseOver="currentAlignmentMouseOver(' + currentAlignmentCounter + ');" onMouseOut="currentAlignmentMouseOut(' + currentAlignmentCounter + ');"><td><a id="currentAlignmentSelect' + currentAlignmentCounter + '"><i id="currentAlignmentIcon' + currentAlignmentCounter + '" class="icon-chevron-up icon-white"></i></a></td><td>'+ metaSourceValue3 +'</td></tr>');
		currentAlignmentItem = currentAlignmentCounter;
		currentAlignmentCounter++;
	}
	
	updateTextArea();
	});
});		


//Delete Button Implementation for Educational Alignment Tab
jQuery(function($){
    $("#deleteButton").click(function() {
	var metaSourceValue1 = $('#educationalAlignment').val();
	var metaSourceValue2 = $('#alignmentType').val();
	var metaSourceValue3 = $('#dotNotation').val();
	var metaSourceValue4 = $('#itemURL').val();
	var metaSourceValue5 = $('#description').val();
	var metaSourceValue6 = $('#itemGUID').val();


	
	// Updates the Educational Alignment Array of the Tagged Items
	boxes = document.checkBoxForm.tagItem.length;
	var onlyInChecked = true;
	
	for (i = 0; i < boxes; i++) {
		if (document.checkBoxForm.tagItem[i].checked) {	
			for (j = 0; j < items[i].educationAlignmentArray.length; j++) {
				if (	items[i].educationAlignmentArray[j].educationalAlignment == metaSourceValue1 &&
						items[i].educationAlignmentArray[j].alignmentType == metaSourceValue2 &&
						items[i].educationAlignmentArray[j].dotNotation == metaSourceValue3 &&
						items[i].educationAlignmentArray[j].itemURL ==  metaSourceValue4 &&
						items[i].educationAlignmentArray[j].description == metaSourceValue5 &&
						items[i].educationAlignmentArray[j].guid == metaSourceValue6 ) {
								items[i].educationAlignmentArray.splice(j,1);
					}
			}
		}
		else {
		for (j = 0; j < items[i].educationAlignmentArray.length; j++) {
				if (	items[i].educationAlignmentArray[j].educationalAlignment == metaSourceValue1 &&
						items[i].educationAlignmentArray[j].alignmentType == metaSourceValue2 &&
						items[i].educationAlignmentArray[j].dotNotation == metaSourceValue3 &&
						items[i].educationAlignmentArray[j].itemURL ==  metaSourceValue4 &&
						items[i].educationAlignmentArray[j].description == metaSourceValue5 &&
						items[i].educationAlignmentArray[j].guid == metaSourceValue6 ) {
								onlyInChecked = false;
								if (items[i].title == '') alert("This alignment exists for the Tagged Item: " + items[i].id + "which was not selected for deletion.");
								if (items[i].title != '') alert("This alignment exists for the Tagged Item: " + items[i].title + "which was not selected for deletion.");
					}
			}
		}
		updateTextArea();
	
	
		if (onlyinChecked){
			document.getElementById('deleteButton').setAttribute("class","btn btn-warning disabled");
			
			
			// Update the Alignment Previous Session History
			$('#currentAlignmentTable').html('<thead><tr><th>Select</th><th>Dot Notation</th></tr></thead><tbody></tbody>');
				for (var i = 0; i < currentAlignmentArray.length; i++){
				if (			currentAlignmentArray[i].educationalAlignment == metaSourceValue1 &&
								currentAlignmentArray[i].alignmentType == metaSourceValue2 &&
								currentAlignmentArray[i].dotNotation == metaSourceValue3 &&
								currentAlignmentArray[i].itemURL ==  metaSourceValue4 &&
								currentAlignmentArray[i].description == metaSourceValue5 &&
								currentAlignmentArray[i].guid == metaSourceValue6  ) {
										currentAlignmentArray.splice(i,1); 
										currentAlignmentCounter = 0;
							}
				}

				for (var i = 0; i < currentAlignmentArray.length; i++){
					var metaSourceValue3 = currentAlignmentArray[i].dotNotation;
					if (metaSourceValue3 == '') metaSourceValue3 = 'N/A';
					$('#currentAlignmentTable > tbody:last').append('<tr style="background-color:#F8B93B;color:#ffffff;" id="currentAlignmentRow' + currentAlignmentCounter + '" onclick="updateAlignmentFields(' + currentAlignmentCounter + ');" onMouseOver="currentAlignmentMouseOver(' + currentAlignmentCounter + ');" onMouseOut="currentAlignmentMouseOut(' + currentAlignmentCounter + ');"><td><a id="currentAlignmentSelect' + currentAlignmentCounter + '"><i id="currentAlignmentIcon' + currentAlignmentCounter + '" class="icon-chevron-up icon-white"></i></a></td><td>'+ metaSourceValue3 +'</td></tr>');
					currentAlignmentItem = currentAlignmentCounter;
					currentAlignmentCounter++;
				}
				blankCurrentAlignment();
			}
		}	
	});
});

function blankCurrentAlignment() {
		for (var k = 0; k < currentAlignmentArray.length; k++){
			document.getElementById('currentAlignmentRow' + k).style.backgroundColor = "#ffffff";	
			document.getElementById('currentAlignmentRow' + k).style.color = "#000000";
		}
}

function updateAlignmentFields(id){
	$('#educationalAlignment').val(currentAlignmentArray[id].educationalAlignment);
	$('#alignmentType').val(currentAlignmentArray[id].alignmentType); 
	$('#dotNotation').val(currentAlignmentArray[id].dotNotation); 
	$('#itemURL').val(currentAlignmentArray[id].itemURL); 
	$('#description').val(currentAlignmentArray[id].description); 
	$('#itemGUID').val(currentAlignmentArray[id].guid); 
	//change all rows to black and white
	blankCurrentAlignment();
		
	//Change the clicked field to gold and update the currentAlignmentItem to the current row
	document.getElementById('currentAlignmentRow' + id).style.backgroundColor = "#F8B93B";	
	document.getElementById('currentAlignmentRow' + id).style.color = "#000000";
	currentAlignmentItem = id;
	document.getElementById('deleteButton').setAttribute("class","btn btn-warning");
	
}

function currentAlignmentMouseOver(id){
			document.getElementById('currentAlignmentRow' + id).style.backgroundColor = "#3F9FD9";	
			document.getElementById('currentAlignmentRow' + id).style.color = "#ffffff";
}

function currentAlignmentMouseOut(id){
			if (id == currentAlignmentItem) {
				document.getElementById('currentAlignmentRow' + id).style.backgroundColor = "#F8B93B";	
				document.getElementById('currentAlignmentRow' + id).style.color = "#000000";			
			}
			else { 
				document.getElementById('currentAlignmentRow' + id).style.backgroundColor = "#ffffff";	
				document.getElementById('currentAlignmentRow' + id).style.color = "#000000";
			}
}

// New Button Action

jQuery(function($){
    $("#newbutton").click(function() {
			jQuery("#mainContentTopLeft").show();
			jQuery("#mainContentTopRight").show();
			jQuery("#mainContentBottom").show();


			// Clear checkboxes of current selection
			// for (i = 0; i < boxes; i++) {
			// document.checkBoxForm.tagItem[i].checked = false;
			// }
			
			if (itemCounter == 0){
				jQuery("#multiItemSelector").empty();
			}
			jQuery("#multiItemSelector").append($("<table style='width:100%;'><tr><td><label name='tagLabel"+itemCounter+"'  id='tagLabel"+itemCounter+"' class='checkbox'><input type='checkbox' id='tagItem' name='tagItem'>New Item "+itemCounter+"</label></td><td><a id='tagURL"+itemCounter+"' class='pull-right' style='display:none;' onclick='updateMainContentBottom(\"\");'><i class='icon-share'></i></a></td><tr/></table>"));		
			var timeFormat = "P" + $( "#amountyears" ).val() + "Y" + $( "#amountmonths" ).val() + "M" + $( "#amountweeks" ).val() + "W" + $( "#amountdays" ).val() + "DT" + $( "#amounthours" ).val() + "H" + $( "#amountminutes" ).val() + "M" + $( "#amountseconds" ).val() + "S";
			
			var educationAlignmentArray = new Array();
			window.items.push({'id':itemCounter,'title':'','language':'','url':'','createdOn':'','topic':'','createdBy':'','usageRightsURL':'','publisher':'','isBasedOnURL':'','endUser':'','ageRange':'','educationalUse':'','interactivityType':'','learningResourceType':'','mediaType':'','timeRequired':timeFormat,'educationAlignmentArray':educationAlignmentArray});
			
			itemCounter++;
        });
});

// Load Button Action

jQuery(function($){
    $("#loadButton").click(function() {
			jQuery("#mainContentTopLeft").hide();
			jQuery("#mainContentTopRight").hide();
			jQuery("#mainContentBottom").hide();
        });
});

// Close Button Action
jQuery(function($){
    $("#closeModalButton").click(function() {
			jQuery("#mainContentTopLeft").show();
			jQuery("#mainContentTopRight").show();
			jQuery("#mainContentBottom").show();			
        });
});

function ISODateString(d){
 function pad(n){return n<10 ? '0'+n : n}
 return d.getUTCFullYear()+'-'
      + pad(d.getUTCMonth()+1)+'-'
      + pad(d.getUTCDate())+'T'
      + pad(d.getUTCHours())+':'
      + pad(d.getUTCMinutes())+':'
      + pad(d.getUTCSeconds())+'Z'
}


function outputFile(myText, myType){
		var textarea = $('textarea');

}

function processJSONOutput(){
		//var myJSONText = JSON.stringify(items);
		var d = new Date();

		// Common JSON File Header
		var myJSONText = "{\n   \"tagger\":{\n      \"name\":\"Agilix LRMI Tagger\",\n      \"version\":\"1.0\"\n   },";
		myJSONText = myJSONText + "   \"document_version\":\"1.0\",\n   \"document_creation_time\":\"" +		ISODateString(d) + "\",\n   \"userFirstName\":\""+ firstName +"\",\n   \"userLastName\":\""+ lastName +"\",\n   \"userOrganization\":\""+ organizationName +"\",\n   \"userEmail\":\""+ userEmail +"\",\n   \"userRole\":\""+ userRole +"\",\n   \"userGrade\":\""+ userGrade +"\",\n   \"userExperience\":\""+ userExperience +"\",\n   \"microdata\":{\n      \"items\":[";
			
		// Setup new Item JSON Output per Item
		for (var i = 0; i < items.length; i++) {
			
			// General Information
			myJSONText = myJSONText + "\n         {\n            \"type\":\"http://schema.org/CreativeWork\",\n            \"properties\":{\n               \"inLanguage\":[\""+items[i].language+"\"],\n               \"name\":[\""+items[i].title.replace(/\"/g, "'")+"\"],\n               \"url\":[\""+items[i].url+"\"],\n               \"about\":[\""+items[i].topic.replace(/\"/g, "'")+"\"],\n               \"dateCreated\":[\""+items[i].createdOn+"\"],\n               \"thumbnailURL\":[\"N/A\"],\n               \"author\":[{\n                  \"type\":\"http://schema.org/Person\",\n                  \"properties\":{\n                     \"name\":[\""+items[i].createdBy+"\"]\n                  }\n               }],\n               \"publisher\":[{\n                  \"type\":\"http://schema.org/Organization\",\n                  \"properties\":{\n                     \"name\":[\""+items[i].publisher+"\"]\n                  }\n               }],\n               \"useRightsURL\":[\""+items[i].usageRightsURL+"\"],\n               \"isBasedOnURL\":[\""+items[i].isBasedOnURL+"\"],";
			
			
			myJSONText = myJSONText + "\n               \"intendedEndUserRole\":[\n";
			var tempString = items[i].endUser.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";
	
			myJSONText = myJSONText + "\n               \"typicalAgeRange\":[\n";	
			var tempString = items[i].ageRange.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";

			myJSONText = myJSONText + "\n               \"educationalUse\":[\n";				
			var tempString = items[i].educationalUse.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";

			myJSONText = myJSONText + "\n               \"interactivityType\":[\n";							
			var tempString = items[i].interactivityType.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";

			myJSONText = myJSONText + "\n               \"learningResourceType\":[\n";				
			var tempString = items[i].learningResourceType.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";

			myJSONText = myJSONText + "\n               \"mediaType\":[\n";		
			var tempString = items[i].mediaType.split(',');
			for (var j = 0; j < tempString.length; j++) {
				myJSONText = myJSONText + "\t\t\"" + tempString[j].replace(/\"/g, "'")+"\","; 
			}
			myJSONText = myJSONText.slice(0,myJSONText.length-1);
			myJSONText = myJSONText + "\n               ],";

			myJSONText = myJSONText + "\n               \"groupType\":[\n";	
			if (typeof items[i].groupType !== 'undefined') {
				var tempString = items[i].groupType.split(',');
				for (var j = 0; j < tempString.length; j++) {
					myJSONText = myJSONText + "\"" + tempString[j].replace(/\"/g, "'")+"\","; 
				}
				myJSONText = myJSONText.slice(0,myJSONText.length-1);	
			}
			myJSONText = myJSONText + "\n               ],";
			
			// Continue with LRMI Alignment Tab JSON Output per Field
			myJSONText = myJSONText + "\n               \"educationalAlignment\":[";
			
			var hasLength = false;
			for (j = 0; j < items[i].educationAlignmentArray.length; j++) {
				myJSONText = myJSONText + "\n                  {\n                     \"type\":\"http://schema.org/AlignmentObject\",\n                     \"properties\":{\n                        \"name\":[\"" + items[i].educationAlignmentArray[j].educationalAlignment + "\"],\n                        \"alignmentType\":[\""+items[i].educationAlignmentArray[j].alignmentType+"\"],\n                        \"targetDescription\":[\""+items[i].educationAlignmentArray[j].description.replace(/\"/g, "'")+"\"],\n                        \"targetName\":[\""+items[i].educationAlignmentArray[j].dotNotation+"\"],\n                        \"targetURL\":[\""+items[i].educationAlignmentArray[j].itemURL+"\"]\n                     }\n                  },";
				hasLength = true;
			}

			if(hasLength != false) {
				myJSONText = myJSONText.slice(0,myJSONText.length-1);
			}
			myJSONText = myJSONText + "\n               ]";
			if (i == items.length -1){
				myJSONText = myJSONText + "\n            }\n         }";
			}
			else {
				myJSONText = myJSONText + "\n            }\n         },";
			}			
		}
		
		// Closing JSON output and preparing to send for post processing download
		myJSONText = myJSONText + "\n      ]\n   }\n}";
		return myJSONText;
}

		

function processCSVOutput(){
		var str = '"Metadata:","Title","URL","Time Required (FORMAT: P0Y0M0W0DT0H0M0S)","Topic","Created (FORMAT: YYYY-MM-DD)","Creator","Publisher","Language","Mediatype","Use Rights URL","Is based on  URL","Intended End User Role","Educational Use","Typical Age Range","Interactivity Type","Learning Resource Type","Educational Alignment","Alignment Type","Dot Notation","Target URL","Target Description","Group Type"\n';
		boxes = items.length;
		for (i = 0; i < boxes; i++) {
				str = str + '"",';
				str = str + '"' + items[i].title.replace(/\"/g, "'") + '",';
				str = str + '"' + items[i].url + '",';
				str = str + '"' + items[i].timeRequired + '",';
				str = str + '"' + items[i].topic.replace(/\"/g, "'") + '",';
				str = str + '"' + items[i].createdOn + '",';				
				str = str + '"' + items[i].createdBy.replace(/\"/g, "'") + '",';
				str = str + '"' + items[i].publisher.replace(/\"/g, "'") + '",';				
				str = str + '"' + items[i].language + '",';
				str = str + '"' + items[i].mediaType.replace(/\"/g, "'") + '",';				
				str = str + '"' + items[i].usageRightsURL + '",';
				str = str + '"' + items[i].isBasedOnURL + '",';				
				str = str + '"' + items[i].endUser.replace(/\"/g, "'") + '",';	
				str = str + '"' + items[i].educationalUse.replace(/\"/g, "'") + '",';			
				str = str + '"' + items[i].ageRange.replace(/\"/g, "'") + '",';
				str = str + '"' + items[i].interactivityType.replace(/\"/g, "'") + '",';
				str = str + '"' + items[i].learningResourceType.replace(/\"/g, "'") + '",';

			
			if (items[i].educationAlignmentArray.length == 0)
			{
				var alignmentString1 = ',';
				var alignmentString2 = ',';
				var alignmentString3 = ',';
				var alignmentString4 = ',';
				var alignmentString5 = ',,';
				str = str + alignmentString1 + alignmentString2 + alignmentString3 + alignmentString4 + alignmentString5;
			}
			else 
			{
				var alignmentString1 = '"';
				var alignmentString2 = '"';
				var alignmentString3 = '"';
				var alignmentString4 = '"';
				var alignmentString5 = '"';
	
				for (j = 0; j < items[i].educationAlignmentArray.length; j++){
					alignmentString1 = alignmentString1 + items[i].educationAlignmentArray[j].educationalAlignment + ',';
					alignmentString2 = alignmentString2 + items[i].educationAlignmentArray[j].alignmentType + ',';
					alignmentString3 = alignmentString3 + items[i].educationAlignmentArray[j].dotNotation + ',';
					alignmentString4 = alignmentString4 + items[i].educationAlignmentArray[j].itemURL + ',';
					alignmentString5 = alignmentString5 + items[i].educationAlignmentArray[j].description.replace(/\"/g, "'") + ',';
				}
				alignmentString1 = alignmentString1.slice(0,alignmentString1.length-1);
				alignmentString2 = alignmentString2.slice(0,alignmentString2.length-1);
				alignmentString3 = alignmentString3.slice(0,alignmentString3.length-1);
				alignmentString4 = alignmentString4.slice(0,alignmentString4.length-1);
				alignmentString5 = alignmentString5.slice(0,alignmentString5.length-1);
				str = str + alignmentString1 + '",' + alignmentString2 + '",' + alignmentString3 + '",' + alignmentString4 + '",' + alignmentString5 + '",';
			}
		
		str = str.slice(0,str.length-1);
		if (typeof items[i].groupType !== 'undefined') {
			str = str + '"' + items[i].groupType.replace(/\"/g, "'") + '"';
		}
		str = str + '\n';

	}
	return str;
}

 function processHTMLOutput(){
		boxes = items.length;
		for (i = 0; i < boxes; i++) {
			var str = '<meta itemscope="itemscope" itemtype="http://schema.org/CreativeWork">\n';
			str = str + '\t<meta itemprop="inLanguage" content="' + items[i].language + '"></meta>\n';
			str = str + '\t<meta itemprop="name" content="' + items[i].title.replace(/\"/g, "'") + '"></meta>\n';
			str = str + '\t<meta itemprop="url" content="' + items[i].url + '"></meta>\n';
			str = str + '\t<meta itemprop="about" content="' + items[i].topic.replace(/\"/g, "'") + '"></meta>\n';	
			str = str + '\t<meta itemprop="dateCreated" content="' + items[i].createdOn + '"></meta>\n';	
			str = str + '\t<meta itemprop="thumbnailUrl" content=""></meta>\n';	

			str = str + '\t<meta itemprop="author" itemtype="http://schema.org/Person" itemscope="itemscope">\n';
			str = str + '\t\t<meta imemprop="name" content="' + items[i].createdBy.replace(/\"/g, "'") + '"></meta>\n';	
			str = str + '\t</meta>\n';			
			
			str = str + '\t<meta itemprop="publisher" itemtype="http://schema.org/Organization" itemscope="itemscope">\n';
			str = str + '\t\t<meta imemprop="name" content="' + items[i].publisher.replace(/\"/g, "'") + '"></meta>\n';	
			str = str + '\t</meta>\n';			
			
			str = str + '\t<meta itemprop="useRightsURL" content="' + items[i].usageRightsURL + '"></meta>\n';	
			str = str + '\t<meta itemprop="isBasedOnURL" content="' + items[i].isBasedOnURL + '"></meta>\n';
			str = str + '\t<meta itemprop="timeRequired" content="' + items[i].timeRequired + '"></meta>\n';			

			var string = items[i].endUser.replace(/\"/g, "'");
			var array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="intendedEndUserRole" content="' + array[j] + '"></meta>\n';			
			}
			
			string = items[i].ageRange.replace(/\"/g, "'");
			array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="typicalAgeRange" content="' + array[j] + '"></meta>\n';			
			}		

			string = items[i].educationalUse.replace(/\"/g, "'");
			array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="educationalUse" content="' + array[j] + '"></meta>\n';			
			}	

			string = items[i].interactivityType.replace(/\"/g, "'");
			array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="interactivityType" content="' + array[j] + '"></meta>\n';			
			}	

			string = items[i].learningResourceType.replace(/\"/g, "'");
			array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="learningResourceType" content="' + array[j] + '"></meta>\n';			
			}							
			
			string = items[i].mediaType.replace(/\"/g, "'");
			array = string.split(',');
			for (j = 0; j < array.length; j++){
				str = str + '\t<meta itemprop="mediaType" content="' + array[j] + '"></meta>\n';			
			}	
			
			if (typeof items[i].groupType !== 'undefined') {
				string = items[i].groupType.replace(/\"/g, "'");
				array = string.split(',');
				for (j = 0; j < array.length; j++){
					str = str + '\t<meta itemprop="groupType" content="' + array[j] + '"></meta>\n';			
				}	
			}
			
			for (j = 0; j < items[i].educationAlignmentArray.length; j++){
				str = str + '\t<meta itemprop="educationalAlignment" itemscope="itemscope" itemtype="schema.org/alignmentObject">';
				str = str + '\t\t<meta itemprop="name" content="' + items[i].educationAlignmentArray[j].educationalAlignment + '"></meta>\n';			
				str = str + '\t\t<meta itemprop="alignmentType" content="' + items[i].educationAlignmentArray[j].alignmentType + '"></meta>\n';
				str = str + '\t\t<meta itemprop="targetDescription" content="' + items[i].educationAlignmentArray[j].description.replace(/\"/g, "'") + '"></meta>\n';
				str = str + '\t\t<meta itemprop="targetName" content="' + items[i].educationAlignmentArray[j].dotNotation + '"></meta>\n';
				str = str + '\t\t<meta itemprop="targetUrl" content="' + items[i].educationAlignmentArray[j].itemURL + '"></meta>\n';
				str = str + '\t</meta>\n';
				}				
			
			str = str + '</meta>';

	}
	return str;
}

function saveLocal(str, fileType){
		var date = new Date();
		var form_action = "http://savefile.joshmcarthur.com/"+ firstName + lastName + "_" + ISODateString(date)+ fileType;
		$('<form></form>', { action: form_action, method: 'POST'}).append(
		$('<input></input>', { name: 'content', type: 'hidden', value: str })
		).submit();	
}

function saveServer(str){
		$('<form></form>', { action: 'http://23.23.213.206:81/index.php', method: 'POST'}).append(
		$('<input></input>', { name: 'content', type: 'hidden', value: str })
		).submit();
}

function saveLearningRegistry(str){
		//TODO:  Completed Learning Registry Submission
}

// jQuery( function ($) {
    $("#HTMLLocalSaveButton").click( function() {
		var str = processHTMLOutput();
		saveLocal(str,".html");
});

// jQuery( function ($) {
    $("#csvLocalSaveButton").click( function() {
		var str = processCSVOutput();
		saveLocal(str,".csv");
});

// jQuery( function ($) {
    $("#JSONLocalSaveButton").click( function() {
		var str = processJSONOutput();
		saveLocal(str,".json");
});


// jQuery( function ($) {
    $("#JSONServerSaveButton").click( function() {
		var str = processJSONOutput();
		saveServer(str);
});

// jQuery( function ($) {
    $("#JSONLearningRegistrySaveButton").click( function() {
		var str = processJSONOutput();
		saveLearningRegistry(str);
});

// Save Load Modal Button Action

jQuery( function ($) {
    $("#saveLoadModalButton").click( function() {
		if (document.getElementById("loadModalTextArea").value != "")
		{
			jQuery("#mainContentTopLeft").show();
			jQuery("#mainContentTopRight").show();
			jQuery("#mainContentBottom").show();				
			document.getElementById("loadModalTextArea").value=document.getElementById("loadModalTextArea").value.replace(/^\s+|\s+$/g,"");
			var textLines = document.getElementById("loadModalTextArea").value.split("\n");
			for ( var i = 0; i < textLines.length; i++ ) {
				var textLine = textLines[i].split(",");
				
				if (itemCounter == 0){
					jQuery("#multiItemSelector").empty();
				}
				jQuery("#multiItemSelector").append($("<table style='width:100%;'><tr><td><label name='tagLabel"+itemCounter+"' id='tagLabel"+itemCounter+"' class='checkbox'><input type='checkbox' id='tagItem' name='tagItem'>" + textLine[0] + "</label></td><td><a id='tagURL"+itemCounter+"' class='pull-right' onclick='updateMainContentBottom(\"" + textLine[1] + "\");'><i class='icon-share'></i></a></td><tr/></table>"));		

				var timeFormat = "P" + $( "#amountyears" ).val() + "Y" + $( "#amountmonths" ).val() + "M" + $( "#amountweeks" ).val() + "W" + $( "#amountdays" ).val() + "DT" + $( "#amounthours" ).val() + "H" + $( "#amountminutes" ).val() + "M" + $( "#amountseconds" ).val() + "S";
				
				var educationAlignmentArray = new Array();
				window.items.push({'id':itemCounter,'title':textLine[0],'language':'','url':textLine[1],'createdOn':'','topic':'','createdBy':'','usageRightsURL':'','publisher':'','isBasedOnURL':'','endUser':'','ageRange':'','educationalUse':'','interactivityType':'','learningResourceType':'','mediaType':'','timeRequired':timeFormat,'groupType':'','educationAlignmentArray':educationAlignmentArray});
				
				itemCounter++;
			}
			document.getElementById("loadModalTextArea").value = "";
		}
		else if (document.getElementById("files").value != "") {
		 	jQuery("#mainContentTopLeft").show();
			jQuery("#mainContentTopRight").show();
			jQuery("#mainContentBottom").show();				
		}
	});
});


</script>